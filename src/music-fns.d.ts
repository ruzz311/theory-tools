declare module "music-fns" {
  /** Declaration file generated by dts-gen */

  export const Chord: {
    AUGMENTED: number[];
    DIMINISHED: number[];
    MAJOR: number[];
    MAJOR_SEVENTH: number[];
    MINOR: number[];
    MINOR_MAJOR_SEVENTH: number[];
    MINOR_SEVENTH: number[];
    SEVENTH: number[];
  };

  export const Interval: {
    A1: number;
    A2: number;
    A3: number;
    A4: number;
    A5: number;
    A6: number;
    A7: number;
    AUGMENTED_FIFTH: number;
    AUGMENTED_FOURTH: number;
    AUGMENTED_SECOND: number;
    AUGMENTED_SEVENTH: number;
    AUGMENTED_SIXTH: number;
    AUGMENTED_THIRD: number;
    AUGMENTED_UNISON: number;
    DIMINISHED_EIGHTH: number;
    DIMINISHED_FIFTH: number;
    DIMINISHED_FOURTH: number;
    DIMINISHED_OCTAVE: number;
    DIMINISHED_SECOND: number;
    DIMINISHED_SEVENTH: number;
    DIMINISHED_SIXTH: number;
    DIMINISHED_THIRD: number;
    M2: number;
    M3: number;
    M6: number;
    M7: number;
    MAJOR_SECOND: number;
    MAJOR_SEVENTH: number;
    MAJOR_SIXTH: number;
    MAJOR_THIRD: number;
    MINOR_SECOND: number;
    MINOR_SEVENTH: number;
    MINOR_SIXTH: number;
    MINOR_THIRD: number;
    O: number;
    OCTAVE: number;
    P1: number;
    P4: number;
    P5: number;
    P8: number;
    PERFECT_FIFTH: number;
    PERFECT_FOURTH: number;
    PERFECT_OCTAVE: number;
    PERFECT_UNISON: number;
    R: number;
    ROOT: number;
    S: number;
    SEMITONE: number;
    T: number;
    TONE: number;
    TRITONE: number;
    TT: number;
    d2: number;
    d3: number;
    d4: number;
    d5: number;
    d6: number;
    d7: number;
    d8: number;
    m2: number;
    m3: number;
    m6: number;
    m7: number;
  };

  export const Mode: {
    AEOLIAN: number[];
    DORIAN: number[];
    IONIAN: number[];
    LOCRIAN: number[];
    LYDIAN: number[];
    MIXOLYDIAN: number[];
    PHRYGIAN: number[];
  };

  export const NOTES: string[][];

  export const Scale: {
    ALGERIAN: number[];
    ALTERED: number[];
    ARABIC: number[];
    AUGMENTED: number[];
    BALINESE: number[];
    BLUES: number[];
    BYZANTINE: number[];
    CHINESE: number[];
    CHROMATIC: number[];
    DOUBLE_HARMONIC: number[];
    ENIGMATIC: number[];
    GYPSY_MAJOR: number[];
    HARMONIC_MINOR: number[];
    HIRAJOSHI: number[];
    IN_SEN: number[];
    JAPANESE: number[];
    MAJOR: number[];
    MAJOR_PENTATONIC: number[];
    MELODIC_MINOR: number[];
    MINOR_PENTATONIC: number[];
    MONGOLIAN: number[];
    NATURAL_MINOR: number[];
    PELOG: number[];
    PROMETHEUS: number[];
    WHOLE_TONE: number[];
    YO: number[];
  };

  export function accidentalToLetter(note: any): any;

  export function accidentalToSymbol(note: any): any;

  export function areEqual(notes: any): any;

  export function areIntervals(intervals: any): any;

  export function areNotes(notes: any): any;

  export function createChord(root: any, chord: any): any;

  export function createMelody(notes: any, pattern: any): any;

  export function createScale(root: any, scale: any, ...args: any[]): any;

  export function flatToSharp(note: any): any;

  export function getAccidental(note: any): any;

  export function getChromaticCPosition(note: any): any;

  export function getDominant(diatonicScale: any, ...args: any[]): any;

  export function getIntervals(notes: any, ...args: any[]): any;

  export function getLeadingTone(diatonicScale: any, ...args: any[]): any;

  export function getMediant(diatonicScale: any, ...args: any[]): any;

  export function getNote(note: any): any;

  export function getNoteOnDegree(scale: any, degree: any, ...args: any[]): any;

  export function getOctave(note: any): any;

  export function getRoot(note: any): any;

  export function getSubdominant(diatonicScale: any, ...args: any[]): any;

  export function getSubmediant(diatonicScale: any, ...args: any[]): any;

  export function getSupertonic(diatonicScale: any, ...args: any[]): any;

  export function getTonic(diatonicScale: any, ...args: any[]): any;

  export function hasAccidental(note: any): any;

  export function hasAccidentalLetter(note: any): any;

  export function hasAccidentalSymbol(note: any): any;

  export function hasIntervalAmount(
    scale: any,
    intervalAmount: any,
    ...args: any[]
  ): any;

  export function hasOctave(note: any): any;

  export function haveSameOctave(...args: any[]): any;

  export function isAnhemitonic(scale: any, ...args: any[]): any;

  export function isAscending(scale: any, ...args: any[]): any;

  export function isCohemitonic(scale: any, ...args: any[]): any;

  export function isDescending(scale: any, ...args: any[]): any;

  export function isDiatonic(scale: any, ...args: any[]): any;

  export function isFifth(interval: any): any;

  export function isFlat(note: any): any;

  export function isHemitonic(scale: any, ...args: any[]): any;

  export function isHeptatonic(scale: any, ...args: any[]): any;

  export function isHexatonic(scale: any, ...args: any[]): any;

  export function isMode(scale: any, ...args: any[]): any;

  export function isNatural(note: any): any;

  export function isNote(scientificNote: any): any;

  export function isOctatonic(scale: any, ...args: any[]): any;

  export function isOctave(interval: any): any;

  export function isPentatonic(scale: any, ...args: any[]): any;

  export function isScale(scale: any, ...args: any[]): any;

  export function isSemitone(interval: any): any;

  export function isSharp(note: any): any;

  export function isTone(interval: any): any;

  export function isTriad(chord: any): any;

  export function normalize(scale: any, ...args: any[]): any;

  export function noteToFrequency(note: string, ...args: any[]): number;

  export function noteToMidi(note: any, ...args: any[]): any;

  export function noteToObject(scientificNote: any): any;

  export function objectToNote(noteObject: any): any;

  export function sharpToFlat(note: any): any;

  export function transferAccidental(note: any, referenceNote: any): any;

  export function transferStyle(note: any, referenceNote: any): any;

  export function transpose(note: any, interval: any, ...args: any[]): any;
}
